import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

price_data = pd.DataFrame({
    'Set': ['Crossover Breakers', 'Legacy of Destruction', 'Power of the Elements/Darkwing Blast'],
    'Year': [2022, 2023, 2023],
    'AvgSecondaryMarketPrice': [40, 65, 50],
    'Reprint': [False, False, True]
})

plt.figure(figsize=(8,4))
sns.barplot(data=price_data, x='Set', y='AvgSecondaryMarketPrice', palette='magma', hue='Set', legend=False)
plt.title('Secondary Market Price of Key Yu-Gi-Oh! Sets (2022-2023) - Estimated')
plt.ylabel('Avg Secondary Market Price (USD)')
plt.xticks(rotation=25)
plt.show()

meta_diversity = pd.DataFrame({
    'Deck': ['Dragon Link', 'Tri-Brigade', 'Virtual World', 'Floowandereeze', 'Spright', 'Kash Tira', 'Tearlaments', 'Tenpai Dragon', 'Snake-Eye'],
    'GenesisFormatUsage': [45, 25, 10, 5, 10, 5, 30, 0, 0],
    'CurrentUsage': [5, 3, 10, 8, 5, 2, 15, 12, 20]
})

banlist_hits = pd.DataFrame({
    'Deck': ['Dragon Link', 'Tri-Brigade', 'Virtual World', 'Floowandereeze', 'Spright', 'Kash Tira', 'Tearlaments', 'Tenpai Dragon', 'Snake-Eye'],
    'BanlistHitsGenesis': [4, 2, 1, 0, 0, 0, 5, 0, 0],
    'BanlistHitsCurrent': [1, 1, 3, 1, 0, 0, 2, 0, 1]
})

fig, axes = plt.subplots(1,2, figsize=(14,6))

meta_diversity.set_index('Deck')[['GenesisFormatUsage', 'CurrentUsage']].plot(kind='bar', ax=axes[0], colormap='coolwarm')
axes[0].set_title('Deck Usage %: Genesis Format vs Current (Estimated from Tournament Data)')
axes[0].set_ylabel('Deck Usage Percentage')

banlist_hits.set_index('Deck')[['BanlistHitsGenesis', 'BanlistHitsCurrent']].plot(kind='bar', ax=axes[1], colormap='viridis')
axes[1].set_title('Banlist Hits on Decks: Genesis Format vs Current (Estimated)')
axes[1].set_ylabel('Number of Banlist Hits')

plt.tight_layout()
plt.show()

meta_diversity['UsageChange'] = meta_diversity['CurrentUsage'] - meta_diversity['GenesisFormatUsage']

plt.figure(figsize=(10, 6))
sns.barplot(data=meta_diversity.sort_values(by='UsageChange', ascending=False), x='Deck', y='UsageChange', palette='coolwarm', hue='Deck', legend=False)
plt.title('Change in Deck Usage %: Genesis Format to Current')
plt.ylabel('Change in Deck Usage Percentage Points')
plt.xticks(rotation=45, ha='right')
plt.tight_layout()
plt.show()

marketing_region = pd.DataFrame({
    'Region': ['Japan', 'North America', 'Europe'],
    'CrossoverBreakersMarketingM': [3.8, 2.5, 1.5],
    'LegacyOfDestructionMarketingM': [4.5, 3.2, 2.0],
    'PowerOfElementsMarketingM': [5.5, 3.8, 2.5],
    'CrossoverBreakersTournaments': [38, 30, 20],
    'LegacyOfDestructionTournaments': [45, 40, 30],
    'PowerOfElementsTournaments': [55, 48, 35]
})

fig, axes = plt.subplots(1,2, figsize=(14,5))

marketing_region.set_index('Region')[['CrossoverBreakersMarketingM', 'LegacyOfDestructionMarketingM', 'PowerOfElementsMarketingM']]\
    .plot(kind='bar', ax=axes[0], colormap='plasma')
axes[0].set_title('Marketing Spend by Region (Million USD) - Estimated')
axes[0].set_ylabel('Million USD')

marketing_region.set_index('Region')[['CrossoverBreakersTournaments', 'LegacyOfDestructionTournaments', 'PowerOfElementsTournaments']]\
    .plot(kind='bar', ax=axes[1], colormap='cividis')
axes[1].set_title('Number of Tournaments by Region - Estimated')
axes[1].set_ylabel('Tournament Count')

plt.tight_layout()
plt.show()

tcg_meta_health = pd.DataFrame({
    'TCG': ['Yu-Gi-Oh!', 'Magic: The Gathering', 'Pok√©mon', 'Digimon', 'One Piece'],
    'PlayerBaseMillions2025': [5.5, 7.0, 9.0, 2.5, 1.5],
    'RetentionRate2025': [0.68, 0.72, 0.76, 0.57, 0.52],
    'MetaDiversityIndex': [0.75, 0.80, 0.70, 0.65, 0.60]
})

fig, axes = plt.subplots(1,3, figsize=(18,5))

sns.barplot(data=tcg_meta_health, x='TCG', y='PlayerBaseMillions2025', ax=axes[0], palette='pastel', hue='TCG', legend=False)
axes[0].set_title(' Player Base (Millions) estimated (2025)')
axes[0].set_ylabel('Millions of Players')
axes[0].set_xticks(range(len(tcg_meta_health['TCG'])))
axes[0].set_xticklabels(tcg_meta_health['TCG'], rotation=30)

sns.barplot(data=tcg_meta_health, x='TCG', y='RetentionRate2025', ax=axes[1], palette='muted', hue='TCG', legend=False)
axes[1].set_title('Player Retention Rate  estimated (2025)')
axes[1].set_ylabel('Retention Rate')
axes[1].set_xticks(range(len(tcg_meta_health['TCG'])))
axes[1].set_xticklabels(tcg_meta_health['TCG'], rotation=30)

sns.barplot(data=tcg_meta_health, x='TCG', y='MetaDiversityIndex', ax=axes[2], palette='deep', hue='TCG', legend=False)
axes[2].set_title('Meta Diversity Index estimated (2025)')
axes[2].set_ylabel('Diversity Index')
axes[2].set_xticks(range(len(tcg_meta_health['TCG'])))
axes[2].set_xticklabels(tcg_meta_health['TCG'], rotation=30)

plt.tight_layout()
plt.show()
